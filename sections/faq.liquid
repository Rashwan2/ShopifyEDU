{% schema %}
{
  "name": "FAQ",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Frequently Asked Questions"
    }
  ],
  "blocks": [
    {
      "type": "question",
      "name": "Question",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question",
          "default": "What is your return policy?"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer",
          "default": "<p>We accept returns within 30 days of purchase.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FAQ",
      "category": "Custom"
    }
  ]
}
{% endschema %}

{% comment %} HTML for the FAQ section {% endcomment %}
<div class="faq-section">
  <h2 class="faq-title">{{ section.settings.title }}</h2>
  
  <div class="faq-items">
    {% for block in section.blocks %}
      <div class="faq-item" {{ block.shopify_attributes }}>
        <button class="faq-question" aria-expanded="false">
          <span class="faq-question-text">{{ block.settings.question }}</span>
          <span class="faq-icon" aria-hidden="true">+</span>
        </button>
        <div class="faq-answer">
          <div class="faq-answer-content">
            {{ block.settings.answer }}
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

{{ 'faq.css' | asset_url | stylesheet_tag }}

<script>
// Simple, reliable FAQ functionality
console.log('FAQ script tag found!');

document.addEventListener('DOMContentLoaded', function() {
    console.log('FAQ script loaded');
    
    // Find all FAQ questions
    const questions = document.querySelectorAll('.faq-question');
    console.log('Found FAQ questions:', questions.length);
    
    if (questions.length === 0) {
        console.error('No FAQ questions found! Check your HTML structure.');
        return;
    }
    
    // Set up click handlers for each question
    questions.forEach(function(question, index) {
        console.log(`Setting up question ${index + 1}:`, question.textContent.trim());
        
        question.addEventListener('click', function() {
            console.log('Question clicked:', this.textContent.trim());
            
            // Find the answer element (next sibling)
            const answer = this.nextElementSibling;
            const icon = this.querySelector('.faq-icon');
            
            console.log('Answer element:', answer);
            console.log('Icon element:', icon);
            
            if (!answer || !icon) {
                console.error('Missing answer or icon element');
                return;
            }
            
            // Close all other answers first
            questions.forEach(function(otherQuestion) {
                if (otherQuestion !== question) {
                    const otherAnswer = otherQuestion.nextElementSibling;
                    const otherIcon = otherQuestion.querySelector('.faq-icon');
                    
                    if (otherAnswer && otherIcon) {
                        otherAnswer.classList.remove('active');
                        otherIcon.textContent = '+';
                        otherQuestion.setAttribute('aria-expanded', 'false');
                    }
                }
            });
            
            // Toggle current answer
            const isCurrentlyActive = answer.classList.contains('active');
            
            if (isCurrentlyActive) {
                // Close this answer
                answer.classList.remove('active');
                icon.textContent = '+';
                this.setAttribute('aria-expanded', 'false');
                console.log('Answer closed');
            } else {
                // Open this answer
                answer.classList.add('active');
                icon.textContent = 'âˆ’';
                this.setAttribute('aria-expanded', 'true');
                console.log('Answer opened');
            }
        });
        
        // Add keyboard support
        question.addEventListener('keydown', function(event) {
            if (event.key === 'Enter' || event.key === ' ') {
                event.preventDefault();
                this.click();
            }
        });
        
        // Visual feedback that it's clickable
        question.style.cursor = 'pointer';
    });
    
    console.log('FAQ setup complete');
});
</script>

